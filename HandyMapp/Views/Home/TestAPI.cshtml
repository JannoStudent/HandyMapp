@model GoogleMapsAPI.NET.API.Directions.Responses.GetDirectionsResponse

@{
    ViewData["Title"] = "TestAPI";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>TestAPI</h2>

<div id="map"></div>
<div id="right-panel">
    <p>Total Distance: <span id="total"></span></p>
</div>


<h1>waypoints</h1>

@foreach (var item in Model.GeocodedWaypoints)
{
    <span>placeID: @item.PlaceId</span><br />
    <span>types: @item.Types</span><br />

        <span>geocodestatus: @item.GeocoderStatus</span><br />

        <span>partialMatch: @item.PartialMatch</span><br />

        <br />
}

<h1>route</h1>

@foreach (var item in Model.Routes)
{
    <span>summary: @item.Summary</span><br />

    <span>WaypointOrder</span><br />
    foreach (var waipoint in item.WaypointOrder)
    {
        <span>@waipoint</span><br />
    }

    <span>overview path</span><br />
    foreach (var path in item.OverviewPath)
    {
        <span>@path.Latitude  -   @path.Latitude</span><br />
    }
    <br />
}

<script>
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: { lat: 52.0607, lng: 4.5540 }  
        });

        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer({
            draggable: true,
            map: map,
            panel: document.getElementById('right-panel')
        });

        directionsDisplay.addListener('directions_changed', function() {
            computeTotalDistance(directionsDisplay.getDirections());
        });

       // displayRoute('Perth, WA', 'Sydney, NSW', directionsService,
         //   directionsDisplay);

        
    }

    function displayRoute(origin, destination, service, display) {
        service.route({
            origin: origin,
            destination: destination,
            waypoints: [{location: 'de leyens, PP'}, {location: 'seghwaert, HH'}],
            travelMode: 'DRIVING',
            avoidTolls: true
        }, function(response, status) {
            if (status === 'OK') {
                display.setDirections(response);
            } else {
                alert('Could not display directions due to: ' + status);
            }
        });
    }

    function computeTotalDistance(result) {
        var total = 0;
        var myroute = result.routes[0];
        for (var i = 0; i < myroute.legs.length; i++) {
            total += myroute.legs[i].distance.value;
        }
        total = total / 1000;
        document.getElementById('total').innerHTML = total + ' km';
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDfFiQB4uFA8_lS-24Ll1EFUXxfGVGoJWs&callback=initMap">
</script>




