
@using System.Web
@model GoogleMapsAPI.NET.API.Directions.Responses.GetDirectionsResponse

@{
    ViewData["Title"] = "DisplayRoute";
    Layout = "~/Views/Shared/_MapLayout.cshtml";
}


<div id="map"></div>
<div class="PlacesResults">
    <div class="PlaceResult">
        @for (int i = 0; i < @Model.Routes.Count; i++)
        {
            <div class="Placetext">
                <h3 class="PlaceTitle">Route</h3>
            </div>
            <span class="PlaceAdress">
                <b>@Html.DisplayTextFor(m => @Model.Routes[i].Summary)</b>
                <hr />
            </span>
                for (int j = 0; j < @Model.Routes[i].Legs.Count; j++)
                {
                <div class="placeDescription">
                    <div class="row">
                        <div class="col-lg-6">
                            <h4><span class="glyphicon glyphicon-time"></span>@Html.DisplayTextFor(m => @Model.Routes[i].Legs[j].Duration.Text)</h4>
                        </div>
                        <div class="col-lg-6">
                            <h4><span class="glyphicon glyphicon-road"></span>@Html.DisplayTextFor(m => @Model.Routes[i].Legs[j].Distance.Text)</h4>
                        </div>
                        <div class="col-lg-12">
                            <h4>Obstacles: </h4>
                        </div>
                    </div>
                    <hr/>
                </div>
                    for (int k = 0; k < @Model.Routes[i].Legs[j].Steps.Count; k++)
                    {
                    <div class="placeDescription">
                        <span>@Html.Raw(HttpUtility.HtmlDecode(@Model.Routes[i].Legs[j].Steps[k].HTMLInstructions))</span>
                        <br />
                        <div class="row">
                            <div class="col-lg-6">
                                <h5>Duration: @Html.DisplayTextFor(m => @Model.Routes[i].Legs[j].Steps[k].Duration.Text)</h5>
                            </div>
                            <div class="col-lg-6">
                                <h5>Time: @Html.DisplayTextFor(m => @Model.Routes[i].Legs[j].Steps[k].Distance.Text)</h5>
                            </div>
                        </div>
                        <hr />
                    </div>
                    }
                }

        }
    </div>
</div>

@section Style {
    <link rel="stylesheet" href="~/css/PlacesResult.css" />
}

@section Scripts {
    @*<script src="~/js/MapDirections.js"></script>*@
    <script>
        var map;
        var markers = [];

        function initMap() {
            map = new window.google.maps.Map(document.getElementById('map'),
                {
                    center: { lat: 52.058295, lng: 4.4950389 },
                    zoom: 13,
                    mapTypeId: 'terrain',
                    styles: [
                        {
                            "featureType": "landscape.natural",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#cddebe"
                                }
                            ]
                        },
                        {
                            "featureType": "landscape.natural.terrain",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#a9adaf"
                                }
                            ]
                        },
                        {
                            "featureType": "poi",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#e1c78e"
                                }
                            ]
                        },
                        {
                            "featureType": "poi.medical",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#f7bbff"
                                }
                            ]
                        },
                        {
                            "featureType": "poi.park",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#b7dc8d"
                                }
                            ]
                        },
                        {
                            "featureType": "road",
                            "elementType": "geometry.stroke",
                            "stylers": [
                                {
                                    "color": "#81878b"
                                },
                                {
                                    "weight": 0.5
                                }
                            ]
                        },
                        {
                            "featureType": "road.arterial",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#f4f28c"
                                }
                            ]
                        },
                        {
                            "featureType": "road.arterial",
                            "elementType": "geometry.stroke",
                            "stylers": [
                                {
                                    "color": "#ebe72c"
                                }
                            ]
                        },
                        {
                            "featureType": "road.highway",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#f59d78"
                                }
                            ]
                        },
                        {
                            "featureType": "road.highway",
                            "elementType": "geometry.stroke",
                            "stylers": [
                                {
                                    "color": "#f06b33"
                                }
                            ]
                        },
                        {
                            "featureType": "road.highway.controlled_access",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#f06b33"
                                }
                            ]
                        },
                        {
                            "featureType": "road.highway.controlled_access",
                            "elementType": "geometry.stroke",
                            "stylers": [
                                {
                                    "color": "#ca470f"
                                }
                            ]
                        },
                        {
                            "featureType": "transit.line",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#b8bcbe"
                                }
                            ]
                        },
                        {
                            "featureType": "water",
                            "elementType": "geometry",
                            "stylers": [
                                {
                                    "color": "#7aa9ef"
                                }
                            ]
                        }
                    ]
                });

            map.addListener('zoom_changed',
                function () {
                    if (map.getZoom() > 15) {
                        map.setMapTypeId('roadmap');
                    } else {
                        map.setMapTypeId('terrain');
                    }
                });

            var response = @Html.Raw(Json.Serialize(Model));
            console.log(response);

            var flightPlanCoordinates = response.routes[0].overview_path;
            var flightPath = new window.google.maps.Polyline({
                path: flightPlanCoordinates,
                geodesic: true,
                strokeColor: '#4285F4',
                strokeOpacity: 0.8,
                strokeWeight: 7
            });

            flightPath.setMap(map);

            var test = 'mapIcons';

            markers.push(new window.google.maps.Marker({
                position: response.routes[0].legs[0].start_location,
                icon: '@Url.Content("~/img/mapIcons/startPoint.png")',
                map: map
            }));

            markers.push(new window.google.maps.Marker({
                position: response.routes[0].legs[0].end_location,
                icon: '@Url.Content("~/img/mapIcons/endPoint.png")',
                map: map
            }));


        }
    </script>
    <script async defer
            type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA-u38FnWXefa5sf7k--4Tp5hFhYcyvE08&libraries=places&callback=initMap">
    </script>
}

